package com.prjcandyhouse;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import com.google.android.gcm.GCMRegistrar;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;


public class MainActivity extends Activity {
	// inner variables
	private static final String PROJECT_ID = "701006689919";
	private static final String TAG = "MainActivity";
	private String regId = "";
	
	private String registrationStatus = "Not yet registered";
	private String broadcastMessage = "No broadcast message";
	
	IntentFilter gcmFilter;
	
	private BroadcastReceiver gcmReceiver = new BroadcastReceiver(){

		@Override
		public void onReceive(Context context, Intent intent) {
			// TODO Auto-generated method stub
			broadcastMessage = intent.getExtras().getString("gcm");
			
			if(broadcastMessage != null){
				tvBroadcastMessage.setText(broadcastMessage);
			}
		}
	};

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        // view initialization
        initXMLComponents();
        
        // notify service
        Intent intent = new Intent(MainActivity.this, NotifyService.class);
        this.startService(intent);
        
        // gcm intent filter
        gcmFilter = new IntentFilter();
        gcmFilter.addAction("GCM_RECEIVED_ACTION");
        
        // register user's device
        registerClient();
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    

    
    
    @Override
	protected void onResume() {
		// TODO Auto-generated method stub
    	registerReceiver(gcmReceiver, gcmFilter);
		super.onResume();
	}


	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		unregisterReceiver(gcmReceiver);
		super.onPause();
	}


	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		GCMRegistrar.onDestroy(this);
		super.onDestroy();
	}


	@Override
	protected void onRestoreInstanceState(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onRestoreInstanceState(savedInstanceState);
		broadcastMessage = savedInstanceState.getString("BroadcastMessage");
		tvBroadcastMessage.setText(broadcastMessage);
	}


	@Override
	protected void onSaveInstanceState(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onSaveInstanceState(savedInstanceState);
		savedInstanceState.putString("BroadcastMessage", broadcastMessage);
	}

    // click listener
    OnClickListener clickListenerSubmitRegId = new OnClickListener() {
		
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			if(regId.equals("")){
				Toast.makeText(getApplicationContext(), "No RegId", Toast.LENGTH_LONG).show();
			}
			else{
				sendPrivateIdToServer(regId);
			}
		}
	};
	
	// register client's device; if registered, show "Already Registered!"
	private void registerClient(){
		try{
			GCMRegistrar.checkDevice(this);
			GCMRegistrar.checkManifest(this);
			regId = GCMRegistrar.getRegistrationId(this);
			
			if(regId.equals("")){
				registrationStatus = "Registering...";
				
				GCMRegistrar.register(this, PROJECT_ID);
				regId = GCMRegistrar.getRegistrationId(this);
				registrationStatus = "Registration Acquired";
			}
			else{
				registrationStatus = "Already Registered!";
			}
		}
		catch(Exception ex){
			ex.printStackTrace();
			registrationStatus = ex.getMessage();
		}
		
		tvRegStatusResult.setText(registrationStatus);
		Log.d(TAG, regId);
	}
	
	// 
	private void sendPrivateIdToServer(final String strId){
		new AsyncTask<Void, String, String>(){

			@Override
			protected String doInBackground(Void... params) {
				// TODO Auto-generated method stub
				String strResponseCode = "";
				InputStream inputStream = null;
				try{
					//
					HttpClient httpClient = new DefaultHttpClient();
					HttpPost httpPost = new HttpPost("http://gogistics.gogistics-tw.com/gcm_reg_id_handler");
					
					//
					List<NameValuePair> nameValuesPairs = new ArrayList<NameValuePair>();
					nameValuesPairs.add(new BasicNameValuePair("userName", "alantai"));
					nameValuesPairs.add(new BasicNameValuePair("registrationId", strId));
					
					//
					HttpResponse response = httpClient.execute(httpPost);
					inputStream = response.getEntity().getContent();
					
					//
					BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
					StringBuilder sb = new StringBuilder();
					
					String line =null;
					while((line = reader.readLine()) != null){
						sb.append(line + "\n");
					}
					strResponseCode = sb.toString();
					inputStream.close();
				}
				catch(Exception ex){
					ex.printStackTrace();
				}
				return strResponseCode;
			}

			@Override
			protected void onPostExecute(String result) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), result, Toast.LENGTH_LONG).show();
				super.onPostExecute(result);
			}
			
		}.execute(null, null, null);
	}
	
    
	/**/
	private TextView tvRegStatusResult;
	private TextView tvBroadcastMessage;
	private Button btnSubmitRegId;
	
	private void initXMLComponents(){
		tvRegStatusResult = (TextView) findViewById(R.id.tvRegStatusResult);
		tvBroadcastMessage = (TextView) findViewById(R.id.tvMessage);
		btnSubmitRegId = (Button) findViewById(R.id.btnSubmitRegId);
		btnSubmitRegId.setOnClickListener(clickListenerSubmitRegId);
	}
}
